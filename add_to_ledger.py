
from utils import ensure_file_exists, ensure_directory_exists, ensure_directory_is_not_empty
import os
from log import Logger
import argparse
from ledger import Ledger

def get_args():
    argparser = argparse.ArgumentParser(description="Add new data to ledger")
    argparser.add_argument("-pipeline_dir", dest="out_dir", help="Directory to place processed output", required=True)
    argparser.add_argument("-s", "-sources", dest="sources", help="comma separated names of sources", default="all")
    argparser.add_argument("-i", "--info_file", dest="info_file", help="file generated by get_info.py", required=True)
    argparser.add_argument("-verbose", dest="verbose", help="Enable verbose terminal logging", action="store_true")

    args = argparser.parse_args()
    return args


if __name__ == "__main__":


    #initialise logger
    logger = Logger(file_name='add_to_ledger.log').logger


    # initialise arg parsing
    args = get_args()

    # Ensure that the output directory exists
    ensure_directory_exists(args.out_dir)

    # Ensure that the info file exists
    ensure_file_exists(args.info_file)


    sources = None
    if(args.sources is "all"):
        logger.warn("source list not provided, adding all sources from the info file")

    else:
        sources = args.sources.strip().split(",") if "," in args.sources else [args.sources]
        sources = [x.strip() for x in sources]



    ledger = Ledger(os.path.join(args.out_dir,"ledger.txt"))
    ledger.add_new_entries(args.info_file, sources)
    ledger.write_ledger()



